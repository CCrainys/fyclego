menu "Lego Processor Component Configurations"

config COMP_PROCESSOR
	bool "Configure Lego as processor component"
	default n
	---help---
	  Say Y if you are going to build a processor-component
	  controller of Lego OS.

if COMP_PROCESSOR

config CHECKPOINT
	bool "Enable checkpoint feature"
	default n
	---help---
	  Say Y if you want periodic checkpointing at processor component.
	  This may slow down application throughput, but could greatly improve
	  the reliability of your system.

	  If unsure, say N.

config LEGO_SPECIAL_MEMMAP
	bool "Enable Lego's special memmap $ parsing semantic" if EXPERT
	default y
	---help---
	  By default, memmap $ option reserves a range of physical memory.
	  This reserved memory will be marked reserved in e820 table, which
	  means this range will not even be registered into memblock.
	  Only memory that has been registered into memblock will be assigned
	  `struct page` with it (both memblock.memory and memblock.reserver
	  will have).

	  However, for pcache code and pgfault handling code we really need
	  the `struct page` to work with pcache. So we change the semantic
	  to: any memory marked by using memmap=NG$NG will be reserved by memblock,
	  instead of bailing out from e820.

	  If unsure, leave it alone.

choice
	prompt "Pcache Eviction Algorithm"
	default PCACHE_EVICT_RANDOM
	help
	  Allows the selection of pcache evction algorithm.
	  Eviction happens when pcache allocation made into a full set.

	config PCACHE_EVICT_RANDOM
		bool "Use Random Algorithm"
		---help---
		  Enable this option to use random algorithm while doing eviction.

	config PCACHE_EVICT_FIFO
		bool "Use FIFO Algorithm"
		---help---
		  Enable this option to use FIFO algorithm while doing eviction.

	config PCACHE_EVICT_LRU
		bool "Use LRU Algorithm"
		---help---
		  Enable this option to use LRU algorithm while doing eviction.
endchoice

menu "Processor DEBUG Options"
config DEBUG_PCACHE
	bool "Debug pcache"
	default n
	depends on COMP_PROCESSOR
	depends on DEBUG_KERNEL
	help
	  This will enable PCACHE_BUG_ON macro etc. Enable this if you
	  are developing pcache subsystem.

	  If unsure, say N.

config DEBUG_PCACHE_FILL
	bool "Debug pcache fill"
	default n
	depends on COMP_PROCESSOR
	depends on DEBUG_KERNEL
	depends on DEBUG_PCACHE
	help
	  Enable to have a detailed dump log of pcache llc miss activities.
	  It basically tells you what lines are fetched from remote. This
	  option may produce *a lot* messages, hence by default it is
	  ratelimited.

	  If unsure, say N

config DEBUG_PCACHE_FILL_UNLIMITED
	bool "Debug pcache fill, print message un-ratelimited"
	default n
	depends on DEBUG_PCACHE_FILL
	help
	  Enable to have un-ratelimited pcache_debug in cache fill path.
	  This indeed will produce a lot messages.

	  If ununsure, say N please.

config DEBUG_PCACHE_FLUSH
	bool "Debug pcache flush"
	default n
	depends on COMP_PROCESSOR
	depends on DEBUG_KERNEL
	depends on DEBUG_PCACHE
	help
	  Enable to have a detailed dump log of pcache flush activities.
	  It basically tells you what lines are flushed, and where they
	  flushed to.

	  If unsure, say N

config DEBUG_PCACHE_PARANOID
	bool "Be paranoid, enable more checking code"
	default n
	depends on COMP_PROCESSOR
	depends on DEBUG_KERNEL
	depends on DEBUG_PCACHE
	help
	  Enable to add more checking code to pcachem, which should
	  hurt performance.

	  If unsure, say N.

config DEBUG_FILE
	bool "Debug open/read/close calls"
	default n
	depends on COMP_PROCESSOR
	depends on DEBUG_KERNEL
	help
	  Enable to debug file related calls

	  If unsure, say N.

config DEBUG_SYSCALL
	bool "Debug all SYSCALL enter/exit"
	default n
	depends on COMP_PROCESSOR
	depends on DEBUG_KERNEL
	help
	  Enable to have a detailed dump log of syscall entering and exit.
	  Only used for testing purpose.

	  If unsure, say N.

config DEBUG_MMAP
	bool "Debug mmap related syscalls"
	default n
	depends on COMP_PROCESSOR
	depends on DEBUG_KERNEL
	help
	  Enable to debug mmap(), brk(), munmap(), mremap() syscalls
	  in processor side. Mostly, it tells you what is returned.

	  If unsure, say N.

config DEBUG_PROC_SYS
	bool "Debug /proc and /sys output"
	default n
	depends on COMP_PROCESSOR
	depends on DEBUG_KERNEL
	help
	  Some user-program will open /proc and /sys files to get information
	  about lego-kernel. We are having these two interfaces to maintain
	  compatability with linux.

	  Enable to print the msg everytime /proc and /sys files are read
	  by user program.

	  If unsure, say N.

config DEBUG_EMULATED_PGTABLE
	bool "Debug emulated pgtable release (may have tons of messages)"
	default n
	depends on COMP_PROCESSOR
	depends on DEBUG_KERNEL
	help
	  Enable to trace the emulated pgtable release function, which is
	  normally invoked by munmap() and mremap().

	  If unsure, say N.

config DEBUG_CHECKPOINT
	bool "Enable to show checkpoint debug messages"
	default n
	depends on DEBUG_KERNEL
	---help---
	  Say Y if you want to have more info about what is going on about checkpoint.

	  If unsure, say N.

endmenu # "Debug Option"

endif

endmenu
